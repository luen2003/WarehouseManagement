@model PetroBM.Web.Models.ConfigArmGroupModel
@{
    ViewBag.Title = "Sửa nhóm Họng Xuất";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.HiddenFor(model => model.ConfigArmGrp.ConfigArmGrpId)

        <div class="form-group">
            @Html.Label("Kho", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="ConfigArmGrp.WareHouseCode" id="WareHouseCode" onchange="SelectedChange()" class="form-control">
                    @foreach (var item in Model.ListWareHouse)
                    {
                        <option value="@item.WareHouseCode">@item.WareHouseName</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfigArmGrp.ConfigArmName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfigArmGrp.ConfigArmName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfigArmGrp.ConfigArmName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Họng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3 " id="list-ConfigArmId">
                <select multiple class="selectpicker form-control list-armNo" name="ListConfigArmId" id="armNo-multiple" data-container="body" data-live-search="true" title="Chọn họng" data-hide-disabled="true" data-actions-box="true" data-virtual-scroll="false">

                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-success" />
                <input type="button" value="Hủy" class="btn btn-primary" onclick="location.href='@Url.Action("Index")'" />
            </div>
        </div>
    </div>
}


@section style{
    @Styles.Render("~/Content/bootstrap-select")
}
@section scripts{
    @Scripts.Render("~/bundles/bootstrap-select");
    <script>

        var listConfigArm =@Html.Raw(Json.Encode(@Model.ListConfigArmTemps));
        var startWareHouseCode =@Html.Raw(Json.Encode(@Model.ConfigArmGrp.WareHouseCode));
        var listStartConfigArm =@Html.Raw(Json.Encode(@Model.SelectConfigArmTemps));
        Init();

        $(document).ready(function () {


            $(document).on("submit", "form", function (e) {
               // $('#ListConfigArmId').selectpicker('refresh');
            });
        });

        function Init(){
            var options = [], _options;

            for (var i = 0; i < listConfigArm.length; i++) {
                if (listConfigArm[i].WareHouseCode==startWareHouseCode){
                    var chk =true;
                    for (var j = 0; j < listStartConfigArm.length; j++) {
                        if (listStartConfigArm[j].ConfigArmId ==listConfigArm[i].ConfigArmId){
                            chk=false;
                            var option = "<option selected='selected' value=" + listConfigArm[i].ConfigArmId + ">" + listConfigArm[i].ArmName + "</option>";
                            options.push(option);

                        }
                    }
                    if (chk){
                        var option =  "<option value=" + listConfigArm[i].ConfigArmId + ">" + listConfigArm[i].ArmName + "</option>";
                        options.push(option);
                    }
                }
            }
            _options = options.join('');
            $('#armNo-multiple')[0].innerHTML = _options;  
            $('.list-armNo').selectpicker('refresh');
        }

        function SelectedChange(){
            var wareHousecode =$("#WareHouseCode").val();
            if (wareHousecode!="" && wareHousecode!=null ){
                var options2 = [], _options2;
                for (var i = 0; i < listConfigArm.length; i++) {

                    if (listConfigArm[i].WareHouseCode==wareHousecode)
                    {
                        var chk =true;
                        if (startWareHouseCode ==wareHousecode){

                            for (var j = 0; j < listStartConfigArm.length; j++) {
                                if (listStartConfigArm[j].ConfigArmId ==listConfigArm[i].ConfigArmId){
                                    chk=false;
                                    var option = "<option selected='selected' value=" + listConfigArm[i].ConfigArmId + ">" + listConfigArm[i].ArmName + "</option>";
                                    options2.push(option);
                                }
                            }
                        }
                        if (chk){

                            var option = "<option value=" + listConfigArm[i].ConfigArmId + ">" + listConfigArm[i].ArmName + "</option>";
                            options2.push(option);
                        }
                    }
                }
                _options2 = options2.join('');
                $('#armNo-multiple')[0].innerHTML = _options2;  
                $('.list-armNo').selectpicker('refresh');
            }
        }


        function Cancel(){
            window.location.href = '/ConfigArmGroup/Index';
        }


    </script>
}
