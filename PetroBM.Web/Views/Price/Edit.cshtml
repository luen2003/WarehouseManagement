@model PetroBM.Web.Models.PriceModel

@{
    ViewBag.Title = "Sửa danh mục giá";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Edit", "Price", FormMethod.Post, new { @name = "frmEdit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Price.ProduceId)

        <div class="form-group">
            @Html.LabelFor(model => model.Price.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.ProductName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Price.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price.Abbreviations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.Abbreviations, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Price.Abbreviations, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.ProductCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Price.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.Unit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Price.Unit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price.AreaPrice1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.AreaPrice1, new { htmlAttributes = new { @class = "form-control input-number" } })
                @Html.ValidationMessageFor(model => model.Price.AreaPrice1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price.AreaPrice2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.AreaPrice2, new { htmlAttributes = new { @class = "form-control input-number" } })
                @Html.ValidationMessageFor(model => model.Price.AreaPrice2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price.EnvironmentTax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price.EnvironmentTax, new { htmlAttributes = new { @class = "form-control input-number" } })
                @Html.ValidationMessageFor(model => model.Price.EnvironmentTax, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-4">
                <input type="submit" value="Lưu" class="btn btn-success" />
                <input type="button" value="Hủy" class="btn btn-primary" onclick="location.href='@Url.Action("Index")'" />
            </div>
        </div>
    </div>
}

@section scripts{
    @Scripts.Render("~/bundles/bootstrap-select")
    @Scripts.Render("~/bundles/input-validate")
    <script>         
            AddCommas();
            $('.btn-success').click(function (e) {

                $('.input-number').each(function (i, obj) {
                    $(this).val($(this).val().replace(/,/g, ''));
                });

                if ($('frmEdit').valid()) {
                    $('frmEdit').submit();
                } else {
                    AddCommas();
                };
            });

            function AddCommas() {
                $('.input-number').each(function (i, obj) {
                    setInputNumber(obj);
                });
            }

    </script>

}