@model PetroBM.Web.Models.ReportModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Báo cáo sự kiện";
}

@using (Html.BeginForm())
{
    <div class='col-sm-4 col-xs-6'>
        <div class="row">
            <label class="control-label col-xs-4">Thời gian đầu</label>
            <div class="form-group col-xs-8">
                <div class='input-group date' id='datetimepicker1'>
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="control-label col-xs-4">Thời gian cuối</label>
            <div class="form-group col-xs-8">
                <div class='input-group date' id='datetimepicker2'>
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class='col-sm-4 col-xs-6'>
        <div class="row">
            <label class="control-label col-xs-4">Người dùng</label>
            <div class="form-group col-xs-8">
                @Html.EditorFor(model => model.User, new
           {
               htmlAttributes = new { @class = "form-control", @style = "width:205px;" }
           })
            </div>
        </div>
        <div class="row">
            <label class="control-label col-xs-4">Loại sự kiện</label>
            <div class="form-group col-xs-8">
                @if (Model.EventTypeList.Any())
                {
                    @Html.DropDownListFor(model => model.EventTypeId,
                   new SelectList(Model.EventTypeList, "TypeId", "TypeName", "") as SelectList, "Chọn tất cả",
                   new { @class = "form-control", @style = "width:205px;" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.EventTypeId,
                   new SelectList(new List<string>()), "Chọn... ",
                   new { @class = "form-control", @style = "width:205px;" })
                }
            </div>
        </div>
    </div>

    <div class='col-sm-4 col-xs- 12' style="margin-bottom:10px;">
        <input type="submit" value="Tìm kiếm" class="btn btn-primary" />
        <input type="submit" fileType="PDF" formtarget="_blank" value="Xuất PDF" class="btn btn-primary" />
        <input type="submit" fileType="EXCEL" value="Xuất EXCEL" class="btn btn-primary" />
        <input type="submit" fileType="PDF" formtarget="_blank" value="In" class="print btn btn-primary" />
    </div>

    @Html.HiddenFor(model => model.FileType);
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Ngày
            </th>
            <th>
                Loại sự kiện
            </th>
            <th>
                Hành động
            </th>
            <th>
                Người thực hiện
            </th>
            <th>
                ID
            </th>
        </tr>
    </thead>
    @{
        foreach (var item in Model.EventList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InsertDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MEventType.TypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.InsertUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventId)
                </td>
            </tr>
        }
    }
</table>
<div class="text-center">
    @Html.PagedListPager(Model.EventList, page => Url.Action("Event",
    new { startDate = Model.StartDate, endDate = Model.EndDate, user = Model.User, eventTypeId = Model.EventTypeId, page }))
</div>
<iframe id="print-frame" src="" style="display:none"></iframe>

@section scripts{
    <script>
        $(function () {
            $('#datetimepicker1').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });
            $('#datetimepicker2').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });

            $('.btn').on('click', function (e) {
                var fileType = $(this).attr('fileType');
                $('#FileType').val(fileType);
            });

            var isChrome = !!window.chrome && !!window.chrome.webstore;
            if (!isChrome) {
                $('.print').hide();
            }

            $('.print').on('click', function (e) {

                var fileType = $(this).attr('fileType');
                $('#FileType').val(fileType);

                var http = new XMLHttpRequest();
                var url = '@Url.Action("Event", "Report")';
                var params = $('form').serialize();
                http.responseType = "blob";
                http.open("POST", url, true);

                http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        var response = http.response;

                        var blob = new Blob([response], { type: 'application/pdf' });
                        var fileURL = URL.createObjectURL(blob);
                        $('#print-frame').attr('src', fileURL);
                        $('#print-frame').on('load', function () {
                            $('#print-frame').get(0).contentWindow.document.execCommand("print", false, null);
                        });

                        //if (document.documentMode || /Edge/.test(navigator.userAgent)) {
                        //    var print = window.open(fileURL);
                        //    setTimeout(function () {
                        //        print.print();
                        //    }, 5000);
                        //} else {
                        //    setTimeout(function () {
                        //        $('#print-frame').get(0).contentWindow.document.execCommand("print", false, null);
                        //    }, 5000);
                        //}
                    }
                }

                http.send(params);

                return false;
            });
        });
    </script>
}