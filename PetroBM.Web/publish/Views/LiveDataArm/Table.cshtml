@model PetroBM.Web.Models.LiveDataArmModel
@using PetroBM.Common.Util
@using PetroBM.Domain.Entities;
@using PetroBM.Web.Models;
@using Newtonsoft.Json
@{
    ViewBag.Title = "Kho: " + @Session[Constants.Session_WareHouseName] + " > Nhóm họng: " + @Session[Constants.Session_ConfigArmGroupName] + " > Dạng bảng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form id="frm" action="Table" method="post" onchange="ReDirectUrl()">

    @Html.HiddenFor(model => model.ConfigArmGrpId)

    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LiveDataArm.ArmNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LiveDataArm.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LiveDataArm.CardSerial)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LiveDataArm.VehicleNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LiveDataArm.CompartmentOrder)
                </th>

                @foreach (var id in Model.ListSelectedField)
            {
                switch (int.Parse(id))
                {
                    case (int)ConfigurationModel.ConfigArmFieldNames.V_Preset:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.V_Preset)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Actual:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.V_Actual)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.Flowrate:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.Flowrate)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.CurrentTemperature:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.CurrentTemperature)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.AvgTemperature:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.AvgTemperature)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Actual_Base:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.V_Actual_Base)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Actual_E:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.V_Actual_E)
                            </th>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.Status:
                            <th>
                                @Html.DisplayNameFor(model => model.LiveDataArm.Status)
                            </th>
                            break;
                    }

                }
            </tr>
        </thead>

        @foreach (var item in Model.ListLiveDataArm)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ArmNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CardSerial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompartmentOrder)
                </td>
                @foreach (var id in Model.ListSelectedField)
                {
                    switch (int.Parse(id))
                    {
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Preset:
                            <td>
                               @NumberUtil.FormatNumber(item.V_Preset,2)
                            </td>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Actual:
                            <td>
                               @NumberUtil.FormatNumber(item.V_Actual,2)
                            </td>
                            break;

                        case (int)ConfigurationModel.ConfigArmFieldNames.Flowrate:
                            <td>
                                @NumberUtil.FormatNumber(item.Flowrate,2)
                            </td>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.CurrentTemperature:
                            <td>
                               @NumberUtil.FormatNumber(item.CurrentTemperature,2)
                            </td>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.AvgTemperature:
                            <td>
                               @NumberUtil.FormatNumber(item.AvgTemperature,2)
                            </td>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Actual_Base:
                            <td>
                              @NumberUtil.FormatNumber(item.V_Actual_Base,2)
                            </td>
                            break;
                        case (int)ConfigurationModel.ConfigArmFieldNames.V_Actual_E:
                            <td>
                               @NumberUtil.FormatNumber(item.V_Actual_E,2)
                            </td>
                            break;

                        case (int)ConfigurationModel.ConfigArmFieldNames.Status:
                            switch (item.Status)
                            {
                                case 0:
                                    <td>Chờ quẹt thẻ</td>
                                    break;
                                case 1:
                                    <td>Nhập mã ngăn </td>
                                    break;
                                case 2:
                                    <td>Chuẩn bị xuất </td>
                                    break;
                                case 3:
                                    <td>Đang xuất </td>
                                    break;
                                case 4:
                                    <td> Kết thúc </td>
                                    break;
                                case 5:
                                    <td> Dừng ép</td>
                                    break;
                                case 6:
                                    <td>Nhập mã lệnh </td>
                                    break;
                                case 7:
                                    <td> Nhập Serial </td>
                                    break;
                            }
                            break;
                    }
                }
            </tr>
        }

    </table>
</form>
<script type="text/javascript">
    function ReDirectUrl() {
        document.getElementById("frm").submit();

    }


</script>
