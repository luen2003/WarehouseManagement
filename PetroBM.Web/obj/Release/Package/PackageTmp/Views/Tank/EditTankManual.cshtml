@model PetroBM.Web.Models.TankModel
@using PetroBM.Common.Util;

@{
    ViewBag.Title = "Sửa thông số đo tay - " + Model.Tank.TankName;
}


@using (Html.BeginForm("DoEditTankManual", "Tank", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TankManual.Id)

        <div class="form-group">
            <label class="control-label col-xs-2">Id bể</label>
            <div class="col-xs-8">
                @Html.TextBoxFor(model => model.TankManual.MTank.TankId, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">Tên bể</label>
            <div class="col-xs-8">
                @Html.TextBoxFor(model => model.TankManual.MTank.TankName, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">@Html.LabelFor(m => m.TankManual.InsertDate)</label>
            <div class="col-xs-8">
                <div class='input-group date' id='datetimepicker1'>
                    @Html.EditorFor(model => model.DateCreateTankManual, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">@Html.LabelFor(m => m.TankManual.WaterLevel)</label>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.TankManual.WaterLevel, new { htmlAttributes = new { @class = "input-number form-control" } })
                @Constants.DIMENSION_MM
                @Html.ValidationMessageFor(model => model.TankManual.WaterLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">@Html.LabelFor(m => m.TankManual.TotalLevel)</label>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.TankManual.TotalLevel, new { htmlAttributes = new { @class = "input-number form-control" } })
                @Constants.DIMENSION_MM
                @Html.ValidationMessageFor(model => model.TankManual.TotalLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">@Html.LabelFor(m => m.TankManual.AvgTemperature)</label>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.TankManual.AvgTemperature, new { htmlAttributes = new { @class = "input-number form-control" } })
                @Html.Raw(Constants.DIMENSION_TEMPERATURE)
                @Html.ValidationMessageFor(model => model.TankManual.AvgTemperature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-8">
                <input type="submit" value="Nhập" class="btn btn-success" />
                <input type="button" value="Hủy" class="btn btn-primary"
                       onclick="location.href='@Url.Action("TankManual", new { id = Model.TankManual.MTank.TankId })'" />
            </div>
        </div>
    </div>
}

@section style{
    <style>
        .form-control {
            display: initial !important;
        }
    </style>
}

@section scripts{
    @Scripts.Render("~/bundles/input-validate")
    <script>
        $(function () {
            $('#datetimepicker1').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });
           
            AddCommas();

            $('.btn-success').click(function (e) {

                $('.input-number').each(function (i, obj) {
                    $(this).val($(this).val().replace(/,/g, ''));
                });

                if ($('form').valid()) {
                    $('form').submit();
                } else {
                    AddCommas();
                };
            });
        });

        function AddCommas() {
            $('.input-number').each(function (i, obj) {
                setInputNumber(obj);
            });
        }
    </script>
}
