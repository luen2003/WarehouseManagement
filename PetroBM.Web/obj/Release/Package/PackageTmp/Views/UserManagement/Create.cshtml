@model PetroBM.Web.Models.UserModel

@{
    ViewBag.Title = "Tạo mới người dùng";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-xs-2">
                @Html.LabelFor(Model => Model.User.UserName)
            </label>
            <div class="col-xs-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">
                @Html.LabelFor(Model => Model.User.Passwd)
            </label>
            <div class="col-xs-10">
                @Html.EditorFor(model => model.User.Passwd, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.User.Passwd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">
                @Html.Label("Nhóm")
            </label>
            <div class="col-xs-3">

                <select multiple class="selectpicker form-control" id="number-multiple" data-container="body" data-live-search="true" title="Chọn nhóm" data-hide-disabled="true" data-actions-box="true" data-virtual-scroll="false" name="ListUserGrpId">
                    @foreach (var item in Model.ListUserGrp)
                    {
                        <option value="@item.GrpId">@item.GrpName</option>
                    }
                </select>

                @*<select class=".selectpicker form-control" multiple name="ListUserGrpId">
                    @foreach (var item in Model.ListUserGrp)
                    {
                        <option value="@item.GrpId">@item.GrpName</option>
                    }
                </select>*@
                @*@if (Model.ListUserGrp.Any())
                {
                    @Html.DropDownListFor(model => model.UserGrpId, new SelectList(Model.ListUserGrp, "GrpId", "GrpName") as SelectList, "Chọn... ", new { @class = "form-control" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.UserGrpId, new SelectList(new List<string>()), "Chọn... ", new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.User.GrpId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">
                @Html.LabelFor(Model => Model.User.FullName)
            </label>
            <div class="col-xs-10">
                @Html.EditorFor(model => model.User.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-xs-2">
                @Html.LabelFor(Model => Model.User.Position)
            </label>
            <div class="col-xs-10">
                @Html.EditorFor(model => model.User.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Position, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-10">
                <input type="submit" value="Tạo mới" class="btn btn-success" />
                <input type="button" value="Hủy" class="btn btn-primary" onclick="location.href='@Url.Action("Index")'" />
            </div>
        </div>
    </div>
}

@section style{
    @Styles.Render("~/Content/bootstrap-select")

    <style>
        .form-control {
            display: inline;
        }
    </style>
}
@section scripts{
    @Scripts.Render("~/bundles/bootstrap-select");
    @Scripts.Render("~/bundles/input-validate");
}
