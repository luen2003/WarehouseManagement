@model PetroBM.Web.Models.ReportModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Báo cáo lỗi";
}

@using (Html.BeginForm())
{
    <div class='col-sm-4 col-xs-6'>
        <div class="row">
            <label class="control-label col-xs-4">Thời gian đầu</label>
            <div class="form-group col-xs-8">
                <div class='input-group date' id='datetimepicker1'>
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="control-label col-xs-4">Thời gian cuối</label>
            <div class="form-group col-xs-8">
                <div class='input-group date' id='datetimepicker2'>
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class='col-sm-4 col-xs-6'>
        <div class="row">
            <label class="control-label col-xs-2">Kho</label>
            <div class="form-group col-xs-10">
                @if (Model.ListWareHouse.Any())
                {
                    @Html.DropDownListFor(model => model.Id,
            new SelectList(Model.ListWareHouse, "Id", "WareHouseName", "") as SelectList, "Chọn... ",
            new { @class = "form-control", @style = "width:205px;" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.Id,
            new SelectList(new List<string>()), "Chọn... ",
            new { @class = "form-control", @style = "width:205px;" })
                }
            </div>
        </div>
        <div class="row">
            <label class="control-label col-xs-2">Bể</label>
            <div class="form-group col-xs-10" id="tanklist">
                @if (Model.TankList.Any())
                    {
                        @Html.DropDownListFor(model => model.TankId,
                           new SelectList(Model.TankList, "TankId", "TankName", "") as SelectList, "Chọn tất cả",
                           new { @class = "form-control", @style = "width:205px;" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.TankId,
                           new SelectList(new List<string>()), "Chọn... ",
                           new { @class = "form-control", @style = "width:205px;" })
                    }

            

            </div>
        </div>

    </div>

    <div class='col-sm-4 col-xs-12' style="margin-bottom:10px;">
        <input type="submit" value="Tìm kiếm" class="btn btn-primary" />
        <input type="submit" fileType="PDF" formtarget="_blank" value="Xuất PDF" class="btn btn-primary" />
        <input type="submit" fileType="EXCEL" value="Xuất EXCEL" class="btn btn-primary" />
        <input type="submit" fileType="PDF" formtarget="_blank" value="In" class="print btn btn-primary" />
    </div>

    @Html.HiddenFor(model => model.FileType);
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Ngày
            </th>
            <th>
                Loại cảnh báo
            </th>
            <th>
                Kho
            </th>
            <th>
                Bể
            </th>
            <th>
                Vấn đề
            </th>
            <th>
                Giá trị
            </th>
            <th class="text-center">
                Trạng thái
            </th>
            <th>
                ID
            </th>
        </tr>
    </thead>
    @{
        var i = 0;
        foreach (var item in Model.AlarmList)
        {
            i++;
            <tr class="error-record">
                <td>
                    @Html.DisplayFor(modelItem => item.InsertDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MAlarmType.TypeName)
                </td>
                <td class="warehousename">
                    @if (item.WareHouseCode != null)
                    {
                           
                    }
                </td>
                <td>
                    @if (@item.MTank != null)
                    {
                        @Html.DisplayFor(modelItem => item.MTank.TankName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Issue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td class="text-center">
                    @if (!item.ConfirmFlag)
                    {
                        <img class="confirm-alarm" src="~/Content/images/icon/alert.gif" style="height: 14px;" />
                    }
                    else
                    {
                        if (!item.SolveFlag)
                        {
                            <img class="solve-alarm" src="~/Content/images/icon/fix.png" style="height: 14px;" />
                        }
                        else
                        {
                            <img src="~/Content/images/icon/tick.png" style="height: 14px;" />
                        }
                    }
                    @Html.Hidden("AlarmId", item.AlarmId.ToString())
                </td>
                <td>
                    @Html.ActionLink(item.AlarmId.ToString(), "Detail", "Alarm", new { id = item.AlarmId }, null)
                </td>
            </tr>
        }
    }
</table>
<div class="text-center">
    @Html.PagedListPager(Model.AlarmList, page => Url.Action("Error",
    new { startDate = Model.StartDate, endDate = Model.EndDate, tankId = Model.TankId, page }))
</div>

<iframe id="print-frame" src="" style="display:none"></iframe>

@section scripts{
    <script>
        $("#Id").on('change', function () {
            var warehouseid = ($(this).find(":selected").val());
            if (warehouseid != "")

            
            $.ajax({
                url: '/WareHouse/GetTankbyWareHouseId/',
                type: 'GET',
                data: {
                    "warehouseid": warehouseid
                },
                dataType: 'json',
                success: function (data) {
                   
                    var tr = "";
                    tr += " <select name='TankId' id='TankId' class='form-control' style='width:205px;'>";
                    tr += " <option value=''>Chọn tất cả</option>";
                    for (var i = 0; i < data.length; i++) {
                        tr += " <option value=" + data[i].tankid + ">" + data[i].tankname + "</option>";
                    }
                    tr += " </select>";
                    document.getElementById('tanklist').innerHTML = tr;
                },
                error: function (err) {
                    alert("GetTankbyWareHouseId Error: " + err.responseText);
                }
            });
           
        });

        $(function () {
            $('#datetimepicker1').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });
            $('#datetimepicker2').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });
            
            var warehosuename = $('#Id :selected').text();

            $(".warehousename").html(warehosuename);
            if (warehosuename == "Chọn... ") {
                $(".warehousename").html("");
            }

            $('.btn').on('click', function (e) {
                var fileType = $(this).attr('fileType');
                $('#FileType').val(fileType);
            });

            var isChrome = !!window.chrome && !!window.chrome.webstore;
            if (!isChrome) {
                $('.print').hide();
            }

            $('.print').on('click', function (e) {

                var fileType = $(this).attr('fileType');
                $('#FileType').val(fileType);

                var http = new XMLHttpRequest();
                var url = '@Url.Action("Error", "Report")';
                var params = $('form').serialize();
                http.responseType = "blob";
                http.open("POST", url, true);

                http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        var response = http.response;

                        var blob = new Blob([response], { type: 'application/pdf' });
                        var fileURL = URL.createObjectURL(blob);
                        $('#print-frame').attr('src', fileURL);
                        $('#print-frame').on('load', function () {
                            $('#print-frame').get(0).contentWindow.document.execCommand("print", false, null);
                        });
                    }
                }

                http.send(params);

                return false;
            });
        });
    </script>
}






