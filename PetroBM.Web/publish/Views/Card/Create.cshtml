@model PetroBM.Web.Models.CardModel
@using PetroBM.Common.Util;
@{
    ViewBag.Title = "Tạo mới thẻ";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <div class="wrapper">
                @Html.Label("Kho", htmlAttributes: new { @class = "control-label col-xs-2" })

                <div class="col-xs-3">
                    <select class="form-control" name="Card.WareHouseCode">
                        @foreach (var item in Model.ListWareHouse)
                        {
                            <option value="@item.WareHouseCode">@item.WareHouseName</option>
                        }
                    </select>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="wrapper">
                @Html.LabelFor(model => model.Card.CardData, htmlAttributes: new { @class = "control-label col-xs-2" })

                <div class="col-xs-3">
                    @Html.EditorFor(model => model.Card.CardData, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Card.CardData, "", new { @class = "text-danger" })
                </div>
                @Html.Label(" ", htmlAttributes: new { @class = "control-label col-xs-1", @style = "text-align :left" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Card.CardSerial, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-3">
                @Html.EditorFor(model => model.Card.CardSerial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Card.CardSerial, "", new { @class = "text-danger" })
            </div>
            @Html.Label(" ", htmlAttributes: new { @class = "control-label col-xs-1", @style = "text-align :left" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Card.ActiveStatus, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-3">
                <select class="form-control" name="Card.ActiveStatus">
                    <option value="1">Kích hoạt</option>
                    <option value="0">không kích hoạt</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Card.UseStatus, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-3">
                <select class="form-control" name="Card.UseStatus">
                    <option value="0">Chưa sử dụng</option>
                    <option value="1">Sử dụng</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-4">
                <input type="button" value="Tạo mới" class="btn btn-success" />
                <input type="button" value="Hủy" class="btn btn-primary" onclick="location.href='@Url.Action("Index")'" />
            </div>
        </div>
    </div>
}
@section scripts{
    @Scripts.Render("~/bundles/input-validate")
    <script>
        $(function () {
            AddCommas();

            $('.btn-success').click(function (e) {

                $('.input-number').each(function (i, obj) {
                    $(this).val($(this).val().replace(/,/g, ''));
                });

                if ($('form').valid()) {
                    $('form').submit();
                } else {
                    AddCommas();
                };
            });
        });

        function AddCommas() {
            $('.input-number').each(function (i, obj) {
                setInputNumber(obj);
            });
        }
    </script>
}