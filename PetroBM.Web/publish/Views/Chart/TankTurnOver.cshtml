@model PetroBM.Web.Models.ChartModel

@{
    ViewBag.Title = "Đồ thị vòng quay bể và kho";
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class='col-sm-4'>
            <div class="row">
                <label class="control-label col-xs-4">Thời gian đầu</label>
                <div class="form-group col-xs-8">
                    <div class='input-group date' id='datetimepicker1'>
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="row">
                <label class="control-label col-xs-4">Thời gian cuối</label>
                <div class="form-group col-xs-8">
                    <div class='input-group date' id='datetimepicker2'>
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="row">
                <label class="control-label col-xs-4">Kho</label>
                <div class="form-group col-xs-8">

                    <select class="form-control" name="WareHouseCode" id="WareHouseCode" style="width:205px;" onchange="WareHouseChange()">
                        @foreach (var item in Model.WareHouseList)
                        {
                            if (Model.WareHouseCode != item.WareHouseCode)
                            {
                                <option value="@item.WareHouseCode">@item.WareHouseName</option>
                            }
                            else
                            {
                                <option value="@item.WareHouseCode" selected="selected">@item.WareHouseName</option>
                            }
                        }
                    </select>
                </div>
            </div>

            <div class="row">
                <label class="control-label col-xs-4">Nhóm bể</label>
                <div class="form-group col-xs-8" id="ListTankGroup">
                    <select name="TankGrpId" id="TankGrpId" class="form-control">
                    </select>
                </div>
            </div>
            <div class="row">
                <label class="control-label col-xs-4"></label>
                <div class="form-group col-xs-8">
                    <input type="submit" value="Xác nhận" class="btn btn-primary" />
                </div>
            </div>
        </div>

        <div class='col-sm-8'>
            <div id="chartContainer" style="height: 600px; width: 100%;">
            </div>
        </div>
    </div>
}

@section scripts{
    @Scripts.Render("~/bundles/canvasjs")

    <script>
        $(function () {
            $('#datetimepicker1').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });
            $('#datetimepicker2').datetimepicker({ format: 'DD/MM/YYYY HH:mm' });
        });
    </script>


    <script type="text/javascript">
        var lstWareHouse = @Html.Raw(Json.Encode(@Model.WareHouseList)); //Lay cac kho
        var lstTankGroup = @Html.Raw(Json.Encode(@Model.TankGroupTempList));//Lay danh Nhóm họng
        WareHouseChange();

        function WareHouseChange()
        {
            var selWareHouse = $("#WareHouseCode").val();
            var opt ="<select class='form-control' name='TankGroupId' style='width:205px;'>";

            for (var i = 0; i < lstTankGroup.length; i++) {
                if (lstTankGroup[i].warehousecode ==selWareHouse)
                {
                    opt += "<Option value=" + lstTankGroup[i].tankgrpid  +">" + lstTankGroup[i].tankgrpname + "</option>";
                }
            }
            opt += "</select>";
            document.getElementById("ListTankGroup").innerHTML = opt;
        }

    </script>


    @if (Model.CanDrawChart)
    {
        <script>
            window.onload = function () {
                var tankTurnOverData = @Html.Raw(Json.Encode(Model.TankTurnOverData));

                var chart = new CanvasJS.Chart("chartContainer", {
                    title: {
                        text: "Đồ thị vòng quay bể và kho",
                        fontFamily: "arial",
                        fontSize: 20
                    },
                    animationEnabled: true,
                    dataPointMaxWidth: 30,
                    axisY: {
                        title: 'Số vòng quay',
                        labelFontSize: 14,
                        titleFontSize: 18,
                        lineThickness: 2,
                    },
                    axisX: {
                        labelFontSize: 14
                    },
                    theme: "theme2",
                    data: [{
                        type: "column",
                        fillOpacity: .8,
                        toolTipContent:"{label}: {y} <br/> Lượng xuất: {export} L <br/> Thể tích: {volume} L",
                        dataPoints: tankTurnOverData
                    }]
                });
                chart.render();
                $('.canvasjs-chart-credit').hide();
            }
        </script>
    }
}
